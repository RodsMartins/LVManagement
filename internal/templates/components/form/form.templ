package form

type SelectOption struct {
	Value string
	Label string
}

templ Label(label string) {
	<label class="block text-gray-700 font-medium mb-1">
		{ label }
	</label>
}

templ ComponentLayout(label string, description string) {
	<div>
		@Label(label)
		if description != "" {
			@Description(description)
		}
		<div class="flex space-x-4">
			{ children... }
		</div>
	</div>
}

templ Description(description string) {
	<p class="text-sm text-gray-500 mb-2">
		{ description }
	</p>
}

templ SelectInput(label string, description string, options []SelectOption, id string) {
	<div>
		@Label(label)
		@Description(description)
		<select
			id={ id }
			name={ id }
			class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
		>
			for _, option := range options {
				<option value={ option.Value }>{ option.Label }</option>
			}
		</select>
	</div>
}

templ TextInput(label string, description string, value string, id string) {
	<div>
		@Label(label)
		@Description(description)
		<input
			type="text"
			id={ id }
			name={ id }
			class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
			value={ value }
		/>
	</div>
}

templ NumberInput(label string, description string, value string, id string) {
	<div>
		@Label(label)
		@Description(description)
		<input
			type="number"
			id={ id }
			name={ id }
			class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
			value={ value }
		/>
	</div>
}

templ toggle(label string, value string, id string) {
	<div>
		<label class="inline-flex items-center cursor-pointer">
			<input id={ id } name={ id } type="checkbox" value={ value } class="sr-only peer"/>
			<div class="relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
			<span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300">{ label }</span>
		</label>
	</div>
}

templ SubmitButton(label string) {
	<div>
		<button
			type="submit"
			class="w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
		>
			{ label }
		</button>
	</div>
}

templ DateTimePicker(label string, description string, id string) {
	@ComponentLayout(label, description) {
		@datePicker(id + "-date")
		@timePicker(id + "-time")
	}
}

// Dependent on DateTimePicker layout
templ DateTimeTogglePicker(label string, description string, toggleLabel string, id string) {
	@ComponentLayout(label, description) {
		@datePicker(id + "-date")
		@timePicker(id + "-time")
		@toggle(toggleLabel, "1", id + "-toggle")
	}
}

templ DatePicker(label string, description string, id string) {
	<div>
		@Label(label)
		@Description(description)
		<div class="flex space-x-4">
			@datePicker(id + "-date")
		</div>
	</div>
}

templ DateRangePicker(label string, description string, id string) {
	<div>
		@Label(label)
		@Description(description)
		<div class="flex space-x-4">
			<div id="date-range-picker" date-rangepicker class="flex items-center">
				<div class="relative">
					<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
						<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
							<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
						</svg>
					</div>
					<input id={ id + "-range-start" } name={ id + "start" } type="text" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date start"/>
				</div>
				<span class="mx-4 text-gray-500">to</span>
				<div class="relative">
					<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
						<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
							<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
						</svg>
					</div>
					<input id={ id + "-range-end" } name={ id + "end" } type="text" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date end"/>
				</div>
			</div>
		</div>
	</div>
}

templ datePicker(id string) {
	<div class="relative max-w-sm">
		<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
			<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
				<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"></path>
			</svg>
		</div>
		<input id={ id } name={ id } datepicker datepicker-autohide type="text" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Select date"/>
	</div>
}

templ timePicker(id string) {
	<div class="relative">
		<div class="absolute inset-y-0 end-0 top-0 flex items-center pe-3.5 pointer-events-none">
			<svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
				<path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm11-4a1 1 0 1 0-2 0v4a1 1 0 0 0 .293.707l3 3a1 1 0 0 0 1.414-1.414L13 11.586V8Z" clip-rule="evenodd"></path>
			</svg>
		</div>
		<input type="time" id={ id } name={ id } class="bg-gray-50 border leading-none border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" value="10:00" required/>
	</div>
}

templ TextArea(label string, description string, value string, id string, placeholder string) {
	<div>
		@Label(label)
		@Description(description)
		<textarea
			rows="4"
			id={ id }
			name={ id }
			class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
			placeholder={ placeholder }
		>
			{ value }
		</textarea>
	</div>
}
