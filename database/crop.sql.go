// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: crop.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const get = `-- name: Get :one
SELECT crop_id, seed_id, soaking_start, soaking_end, stacking_start, stacking_end, lights_start, lights_end
FROM Crops
WHERE crop_id = $1
`

func (q *Queries) Get(ctx context.Context, cropID pgtype.UUID) (Crop, error) {
	row := q.db.QueryRow(ctx, get, cropID)
	var i Crop
	err := row.Scan(
		&i.CropID,
		&i.SeedID,
		&i.SoakingStart,
		&i.SoakingEnd,
		&i.StackingStart,
		&i.StackingEnd,
		&i.LightsStart,
		&i.LightsEnd,
	)
	return i, err
}

const list = `-- name: List :one
SELECT crop_id, seed_id, soaking_start, soaking_end, stacking_start, stacking_end, lights_start, lights_end FROM Crops
`

func (q *Queries) List(ctx context.Context) (Crop, error) {
	row := q.db.QueryRow(ctx, list)
	var i Crop
	err := row.Scan(
		&i.CropID,
		&i.SeedID,
		&i.SoakingStart,
		&i.SoakingEnd,
		&i.StackingStart,
		&i.StackingEnd,
		&i.LightsStart,
		&i.LightsEnd,
	)
	return i, err
}
